OPEN : List { Menampung jalur yang tersedia }
CLOSED : List { Menampung jalur terbaik menuju goal state } 

OPEN[0] ← start
start.h ← heuristic(start)  
start.g <- 0
start.f ← start.h

while OPEN is not empty do
  current = find_min_f(OPEN)
  OPEN.remove(current)

  if current = goalState then
    return CLOSED

  successors <- adjacent state of current

  for each successor of successors:
    if successor is in CLOSED then
      continue
    endif
    
    successor.g <- current.g + distance(current, successor)
    successor.h <- heuristic(successor)
    successor.f <- successor.g + successor.h

    if successor is in OPEN and successor.f < OPEN[indexof(successor)].f then
      OPEN.remove(successor)
    endif
    
    if successor is not in open then
      OPEN.add(successor)
    endif
  endfor
  
  CLOSED.add(current)
endwhile

return failure