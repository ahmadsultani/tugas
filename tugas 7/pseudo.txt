BAB 14 No 6
program nilai_mahasiswa
{Menghitung nilai rata-rata dari setiap mahasiswa dengan jumlah mata kuliah sebanyak n}

DEKLARASI
M, n, jumSKS, JumNilai, nilaiKonversi, i, j : integer
NR : array [1..n] of real
data : record < indeksNilai : character
                SKS : integer >
NilaiMhs : array [1..M, 1..n] of data

ALGORITMA
jumSKS = 0
jumNilai = 0
read(M, n)
for i <- 0 to M-1 do
    for j <- 0 to n-1 do
        nilaiKonversi <- 0
        case NIlaiMhs[i, j].indeksNilai of
        read(NilaiMhs[i, j].indeksNilai)
            'A' : nilaiKonversi <- 4
            'B' : nilaiKonversi <- 3
            'C' : nilaiKonversi <- 2
            'D' : nilaiKonversi <- 1
            'E' : nilaiKonversi <- 0
            Otherwise : 
                write("Nilai tidak valid")
                return 0
        read(NilaiMhs[i, j].SKS)
        JumNilai <- JumNilai + (nilaiKonversi * NilaiMhs[i, j].SKS)
        jumSKS <- jumSKS + NilaiMhs[i, j].SKS
    endfor
    NR[i] <- JumNilai / jumSKS
endfor

write("Nilai rata-rata dari setiap mahasiswa adalah : ")
for i <- 0 to M-1 do
    write("Mahasiswa ke-", i+1, " : ", NR[i])
    end
endfor


BAB 15 
No 1
program sequential_reversed
{mencari nilai x dalam larik dengan pencarian beruntun dari elemen terakhir}

DEKLARASI
x, i, j, N : integer
arr : array [1..N] of integer

ALGORITMA
read(N)
for i <- 1 to N do
    read(arr[i])
endfor
j <- N
while j >= 1 do
    if arr[j] = x then
        write(x, "ditemukan pada indeks ke-", i)
        return 0
    endif
    j <- j - 1 
endfor
write(x, "tidak ditemukan dalam array")

No 5
function pencarian_interpolasi(input: arr : LarikInt, N, target : integer)
{salah satu variasi dari pencarian bagidua}

DEKLARASI
left, right, mid : integer

ALGORITMA
left <- 0
right <- N-1
while (left != right) or (arr[left] != arr[right]) do
    mid <- left + (right-left)/(arr[right]-arr[left]) * (target-arr[left])
    if arr[mid] = target then
        return mid
    else 
        if arr[mid] < target then
            left <- mid + 1
        else
            right <- mid - 1
        endif
    endif
endwhile
return -1

program pencarian
{mencari suatu bilangan dalam larik bilangan}

DEKLARASI
N, target, index, i : integer
type LarikInt : array [1..N] of integer
arr : LarikInt 
function pencarian_interpolasi(input: arr : LarikInt, N, target : integer)
{salah satu variasi dari pencarian bagidua}

ALGORITMA
read(N)
for i<-0 to (N-1) do
    read(arr[i])
endfor
read(target)
index = pencarian_interpolasi(arr, N, target)
if index != 0 then
    write("Bilangan ditemukan pada indeks ke ", index)
else 
    write("Bilangan tidak ditemukan") 
endif